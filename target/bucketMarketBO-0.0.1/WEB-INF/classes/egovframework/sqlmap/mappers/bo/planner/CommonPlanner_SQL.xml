<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommonPlanner">

    <!-- 관리자 > 레디플래너 > 공통 조건절 -->
    <sql id="commonPlannerWhere">
    </sql>
    
    <!-- 관리자 > 레디플래너 > 실적 조건절 -->
    <sql id="commonPerformanceWhere">
    </sql>
    
    <!-- 관리자 > 레디플래너 > 정산 조건절 -->
    <sql id="commonPaymentWhere">
        AND TOD.RDP_MST_IDX = #{RDP_MST_IDX}
        <!-- 기간 -->
        <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
            AND VRO.ALOW_DT <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0')
        </if>
        <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
            AND VRO.ALOW_DT <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0')
        </if>
    </sql>
    
    <resultMap id="resultPlannerProfile" type="HashMap">
    
        <result property="RDP_MST_IDX" column="RDP_MST_IDX"/> <!-- 레디플래너IDX -->
        <result property="RDP_MST_NO" column="RDP_MST_NO"/> <!-- 레디플래너번호 -->
        <result property="RDP_MST_ID" column="RDP_MST_ID"/> <!-- 레디플레너아이디 -->
        <result property="RDP_MST_PW" column="RDP_MST_PW"/> <!-- 비밀번호 -->
        <result property="RDP_MST_MEM_NM" column="RDP_MST_MEM_NM"/> <!-- 이름 -->
        <result property="RDP_MST_BUSI_CLS" column="RDP_MST_BUSI_CLS"/> <!-- 사업자유형 -->
        <result property="RDP_MST_DM_YN" column="RDP_MST_DM_YN"/> <!-- 소속 -->
        <result property="RDP_MST_DM_NO" column="RDP_MST_DM_NO"/> <!-- 사번 -->
        <result property="RDP_LVL_IDX" column="RDP_LVL_IDX"/> <!-- 레디플래너 등급IDX -->
        <result property="RDP_MST_MAIL" column="RDP_MST_MAIL"/> <!-- E-MAIL -->
        <result property="RDP_MST_HP1" column="RDP_MST_HP1"/> <!-- 휴대폰번호1 -->
        <result property="RDP_MST_HP2" column="RDP_MST_HP2"/> <!-- 휴대폰번호2 -->
        <result property="RDP_MST_HP3" column="RDP_MST_HP3"/> <!-- 휴대폰번호3 -->
        <result property="RDP_MST_CI" column="RDP_MST_CI"/> <!-- CI -->
        <result property="RDP_MST_SIT_DSC" column="RDP_MST_SIT_DSC"/> <!-- 홍보사이트 설명 -->
        <result property="RDP_MST_ANS1" column="RDP_MST_ANS1"/> <!-- 답변1 -->
        <result property="RDP_MST_ANS2" column="RDP_MST_ANS2"/> <!-- 답변2 -->
        <result property="RDP_MST_ANS3" column="RDP_MST_ANS3"/> <!-- 답변3 -->
        <result property="RDP_MST_ANS4" column="RDP_MST_ANS4"/> <!-- 답변4 -->
        <result property="RDP_MST_ANS5" column="RDP_MST_ANS5"/> <!-- 답변5 -->
        <result property="RDP_MST_ANS6" column="RDP_MST_ANS6"/> <!-- 답변6 -->
        <result property="RDP_MST_STATE" column="RDP_MST_STATE"/> <!-- 사용상태 -->
        <result property="RDP_MST_RJT_RSN" column="RDP_MST_RJT_RSN"/> <!-- 반려사유 -->
        <result property="RDP_MST_EDU_YN" column="RDP_MST_EDU_YN"/> <!-- 교육이수여부 -->
        <result property="RDP_MST_AGR_DT" column="RDP_MST_AGR_DT"/> <!-- 약관동의일 -->
        <result property="RDP_MST_BUSI_NM" column="RDP_MST_BUSI_NM"/> <!-- 회사명 -->
        <result property="RDP_MST_BUSI1" column="RDP_MST_BUSI1"/> <!-- 사업자번호1 -->
        <result property="RDP_MST_BUSI2" column="RDP_MST_BUSI2"/> <!-- 사업자번호2 -->
        <result property="RDP_MST_BUSI3" column="RDP_MST_BUSI3"/> <!-- 사업자번호3 -->
        <result property="RDP_MST_CEO_NM" column="RDP_MST_CEO_NM"/> <!-- 대표자명 -->
        <result property="RDP_MST_BUSI_CDT" column="RDP_MST_BUSI_CDT"/> <!-- 업태 -->
        <result property="RDP_MST_BUSI_TYPE" column="RDP_MST_BUSI_TYPE"/> <!-- 업종 -->
        <result property="RDP_MST_ZIP_CODE" column="RDP_MST_ZIP_CODE"/> <!-- 사업장_우편번호5자리 -->
        <result property="RDP_MST_DR_ADDR1" column="RDP_MST_DR_ADDR1"/> <!-- 도로명_기본주소 -->
        <result property="RDP_MST_DR_ADDR2" column="RDP_MST_DR_ADDR2"/> <!-- 도로명_상세주소 -->
        <result property="RDP_MST_SSN1" column="RDP_MST_SSN1"/> <!-- 주민번호 앞자리 -->
        <result property="RDP_MST_SSN2" column="RDP_MST_SSN2"/> <!-- 주민번호 뒷자리 -->
        <result property="RDP_MST_BNK_CD" column="RDP_MST_BNK_CD"/> <!-- 은행코드 -->
        <result property="RDP_MST_BNK_ACT" column="RDP_MST_BNK_ACT"/> <!-- 계좌번호 -->
        <result property="RDP_MST_ACT_HDR" column="RDP_MST_ACT_HDR"/> <!-- 계좌번호 -->
        <result property="RDP_MST_ATV_DT" column="RDP_MST_ATV_DT"/> <!-- 활동시작일 -->
        <result property="RDP_MST_STP_RSN" column="RDP_MST_STP_RSN"/> <!-- 정지 사유 -->
        <result property="RDP_MST_RLS_RSN" column="RDP_MST_RLS_RSN"/> <!-- 해제요청 사유 -->
        <result property="RDP_MST_REG_DT" column="RDP_MST_REG_DT"/> <!-- 최초_등록일 -->
        <result property="RDP_MST_REG_IP" column="RDP_MST_REG_IP"/> <!-- 최초_등록_IP -->
        <result property="RDP_MST_REG_ID" column="RDP_MST_REG_ID"/> <!-- 최초_등록자_아이디 -->
        <result property="RDP_MST_UPD_DT" column="RDP_MST_UPD_DT"/> <!-- 최종_등록일 -->
        <result property="RDP_MST_UPD_IP" column="RDP_MST_UPD_IP"/> <!-- 최종_등록_IP -->
        <result property="RDP_MST_UPD_ID" column="RDP_MST_UPD_ID"/> <!-- 최종_등록자_아이디 -->
        
        <result property="RDP_MST_STATE_NM" column="RDP_MST_STATE_NM"/> <!-- 사용상태_명칭 -->
        <result property="RDP_MST_UPD_NM" column="RDP_MST_UPD_NM"/> <!-- 최종_등록자_이름 -->
        <result property="RDP_SUB_CD" column="RDP_SUB_CD" jdbcType="CLOB" javaType="java.lang.String"/> <!-- 주제 -->
        <result property="RDP_LVL_NM" column="RDP_LVL_NM"/> <!-- 등급명 -->
        <result property="RDP_HIS_REG_DT" column="RDP_HIS_REG_DT"/> <!-- 최근_접속_일시 -->
        
        <!-- 홍보계정 -->
        <collection property="RDP_SIT_ADR_LIST" javaType="java.util.ArrayList" ofType="HashMap">
            <id property="RDP_SIT_ADR" column="RDP_SIT_ADR"/>
        </collection>
    </resultMap>
    
    <!-- 관리자 > 레디플래너 > 플래너 상세조회 - 프로필 -->
    <select id="selectPlannerProfile" parameterType="HashMap" resultMap="resultPlannerProfile">
        /* CommonPlanner.selectPlannerProfile */
        SELECT
        
            RM.*,
            
            (SELECT CMN_COM_NM FROM T_CMM_COM WHERE CMN_COM_IDX = RM.RDP_MST_STATE) AS RDP_MST_STATE_NM,
            (SELECT ADM_MST_NM FROM T_ADM_MST WHERE ADM_MST_ID = RM.RDP_MST_UPD_ID) AS RDP_MST_UPD_NM,
            (SELECT WM_CONCAT(CMN_COM_NM) FROM T_RDP_SUB RS, T_CMM_COM CC WHERE RDP_MST_IDX = RM.RDP_MST_IDX AND RS.RDP_SUB_CD = CC.CMN_COM_IDX) AS RDP_SUB_CD,
            (SELECT RDP_HIS_REG_DT FROM T_RDP_HIS WHERE RDP_MST_IDX = RM.RDP_MST_IDX AND ROWNUM = 1) AS RDP_HIS_REG_DT,
            (SELECT RDP_LVL_NM FROM T_RDP_LVL RL WHERE RL.RDP_LVL_IDX = RM.RDP_LVL_IDX) AS RDP_LVL_NM,
            RS.RDP_SIT_ADR
            
        FROM 
            T_RDP_MST RM,
            T_RDP_SIT RS
        WHERE 
            RM.RDP_MST_IDX = RS.RDP_MST_IDX (+)
            AND RM.RDP_MST_IDX = #{RDP_MST_IDX}
    </select>
    
    <!-- 관리자 > 레디플래너 > 공통 > 상태 수정 -->
    <update id="updateState" parameterType="HashMap">
        /* CommonPlanner.updateState */
        UPDATE 
            T_RDP_MST 
        SET
            RDP_MST_STATE = #{RDP_MST_STATE}
            <if test="RDP_MST_STATE != null and RDP_MST_STATE == @common.code.Code@PLANNER_STATE_REJECT">
                ,RDP_MST_RJT_RSN = #{RDP_MST_RJT_RSN}
            </if>
            <if test="RDP_MST_STATE != null and RDP_MST_STATE == @common.code.Code@PLANNER_STATE_STOP">
                ,RDP_MST_STP_RSN = #{RDP_MST_STP_RSN}
            </if>
            <if test="RDP_MST_STATE != null and RDP_MST_STATE == @common.code.Code@PLANNER_STATE_REQUEST_RELEASE">
                ,RDP_MST_RLS_RSN = #{RDP_MST_RLS_RSN}
            </if>
        WHERE 
            RDP_MST_IDX = #{RDP_MST_IDX}
    </update>
    
    <!-- 관리자 > 레디플래너 > 공통 > 상태 및 수정일자 수정 : 상태가 변경되는 경우에만 업데이트 -->
    <update id="updateStateUpdateDate" parameterType="HashMap">
        /* CommonPlanner.updateStateUpdateDate */
        UPDATE 
            T_RDP_MST 
        SET
            RDP_MST_UPD_DT = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS'),
            RDP_MST_UPD_ID = #{RDP_MST_UPD_ID},
            RDP_MST_UPD_IP = #{RDP_MST_UPD_IP}
        WHERE 
            RDP_MST_IDX = #{RDP_MST_IDX}
            AND #{RDP_MST_STATE} <![CDATA[<>]]> (SELECT RDP_MST_STATE FROM T_RDP_MST WHERE RDP_MST_IDX = #{RDP_MST_IDX})
    </update>
    
    <!-- 관리자 > 레디플래너 > 공통 > 프로필 수정 -->
    <update id="updateProfile" parameterType="HashMap">
        /* CommonPlanner.updateProfile */
        UPDATE 
            T_RDP_MST 
        SET
            RDP_MST_BUSI_CLS = #{RDP_MST_BUSI_CLS},
            <!-- 개인 -->
            <if test="RDP_MST_BUSI_CLS != null and RDP_MST_BUSI_CLS == @common.code.Code@PLANNER_BUSINESS_CLASS_PRIVATE">
                RDP_MST_SSN1 = #{RDP_MST_SSN1},
                RDP_MST_SSN2 = #{RDP_MST_SSN2},
                RDP_MST_BNK_CD = #{RDP_MST_BNK_CD},
                RDP_MST_BNK_ACT = #{RDP_MST_BNK_ACT},
                RDP_MST_ACT_HDR = #{RDP_MST_ACT_HDR},
                RDP_MST_ZIP_CODE = #{RDP_MST_ZIP_CODE},
                RDP_MST_DR_ADDR1 = #{RDP_MST_DR_ADDR1},
                RDP_MST_DR_ADDR2 = #{RDP_MST_DR_ADDR2}
            </if>
            <!-- 개인사업자(세금N) / 개인/법인사업자(세금Y) -->
            <if test="RDP_MST_BUSI_CLS != null and RDP_MST_BUSI_CLS != @common.code.Code@PLANNER_BUSINESS_CLASS_PRIVATE">
                RDP_MST_BUSI_NM = #{RDP_MST_BUSI_NM},
                RDP_MST_BUSI1 = #{RDP_MST_BUSI1},
                RDP_MST_BUSI2 = #{RDP_MST_BUSI2},
                RDP_MST_BUSI3 = #{RDP_MST_BUSI3},
                RDP_MST_CEO_NM = #{RDP_MST_CEO_NM},
                RDP_MST_BUSI_CDT = #{RDP_MST_BUSI_CDT},
                RDP_MST_BUSI_TYPE = #{RDP_MST_BUSI_TYPE},
                RDP_MST_ZIP_CODE = #{RDP_MST_ZIP_CODE},
                RDP_MST_DR_ADDR1 = #{RDP_MST_DR_ADDR1},
                RDP_MST_DR_ADDR2 = #{RDP_MST_DR_ADDR2},
                RDP_MST_BNK_CD = #{RDP_MST_BNK_CD},
                RDP_MST_BNK_ACT = #{RDP_MST_BNK_ACT},
                RDP_MST_ACT_HDR = #{RDP_MST_ACT_HDR}
            </if>
        WHERE 
            RDP_MST_IDX = #{RDP_MST_IDX}
    </update>
    
    <!-- 관리자 > 레디플래너 > 공통 > 실적 목록 개수 -->
    <select id="selectPlannerPerformanceListCount" parameterType="HashMap" resultType="Integer">
        /* CommonPlanner.selectPlannerPerformanceListCount */ 
        
        SELECT 
            COUNT(DISTINCT W.PRD_MST_NO)
        FROM (
        
            SELECT 
                TOM.PRD_MST_NO, 
                'R' AS STATUS,
                COUNT(TOM.PRD_MST_NO) AS CNT,
                0 AS EXPECTED_RETURN
            FROM 
                T_ORD_DLCC TOD,
                T_ORD_MST TOM
            WHERE 
                TOD.RDP_MST_IDX = #{RDP_MST_IDX} 
                AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX
                    
                <!-- 기간 -->
                <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                    AND TOM.ORD_MST_ORD_DT <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00000000'
                </if>
                <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                    AND TOM.ORD_MST_ORD_DT <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31235959'
                </if>
                <!-- 상품 -->
                <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                    AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                </if>
            
            GROUP BY 
                TOM.PRD_MST_NO
                
            UNION 
            
            SELECT 
                TOM.PRD_MST_NO,
                'W' AS STATUS,
                COUNT(TOM.PRD_MST_NO) AS CNT,
                0 AS EXPECTED_RETURN
            FROM 
                T_ORD_DLCC TOD,
                T_ORD_MST TOM,
                V_ORD_MST VOM
            WHERE 
                TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX 
                AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX 
                AND VOM.REG_DM IS NOT NULL
                    
                <!-- 기간 -->
                <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                    AND VOM.REG_DM <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00000000'
                </if>
                <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                    AND VOM.REG_DM <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31235959'
                </if>
                <!-- 상품 -->
                <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                    AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                </if>
            
            GROUP BY 
                TOM.PRD_MST_NO
                
            UNION 
            
            SELECT 
                J.PRD_MST_NO,
                'J' AS STATUS,
                COUNT(J.PRD_MST_NO) AS CNT,
                SUM(J.EXPECTED_RETURN) AS EXPECTED_RETURN
            FROM (
                SELECT 
                    TOM.PRD_MST_NO,
                    (
                     SELECT 
                        SUM((VRB.PAY_NO_END - VRB.PAY_NO + 1 ) * VRB.AMT) 
                     FROM 
                        V_B2B_MST VBM,
                        V_RMT_BASIC VRB
                     WHERE 
                        VBM.COM_CD = TOD.SALE_TYPE 
                        AND VRB.SALE_TYPE = VBM.SALE_TYPE 
                        AND VRB.PROD_CD = VOM.PROD_CD 
                        AND VRB.B2B_COMP_CD = TOD.SALE_TYPE
                        AND VOM.JOIN_DT BETWEEN REPLACE(VRB.PROD_JOIN_DT_STR, '-', '') AND REPLACE(VRB.PROD_JOIN_DT_END, '-', '') 
                    ) AS EXPECTED_RETURN
                FROM 
                    T_ORD_DLCC TOD,
                    T_ORD_MST TOM,
                    V_ORD_MST VOM
                WHERE 
                    TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                    AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX 
                    AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX 
                    AND VOM.JOIN_DT IS NOT NULL
                    
                    <!-- 기간 -->
                    <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                        AND VOM.JOIN_DT <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00'
                    </if>
                    <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                        AND VOM.JOIN_DT <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31'
                    </if>
                    <!-- 상품 -->
                    <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                        AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                    </if>
                    
            ) J
            GROUP BY 
                J.PRD_MST_NO
                
            UNION 
                                
            SELECT 
                TOM.PRD_MST_NO,
                'C' AS STATUS,
                COUNT(TOM.PRD_MST_NO) AS CNT,
                0 AS EXPECTED_RETURN
            FROM 
                T_ORD_DLCC TOD,
                T_ORD_MST TOM,
                V_ORD_MST VOM
            WHERE 
                TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX 
                AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX 
                AND VOM.RESN_PROC_DAY IS NOT NULL
                AND VOM.RESN_PROC_YN = 'Y'

                <!-- 기간 -->
                <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                    AND VOM.RESN_PROC_DAY <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00'
                </if>
                <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                    AND VOM.RESN_PROC_DAY <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31'
                </if>
                <!-- 상품 -->
                <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                    AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                </if>
                
            GROUP BY 
                TOM.PRD_MST_NO
        ) W
    </select>
    
    <!-- 관리자 > 레디플래너 > 공통 > 실적 목록 -->
    <select id="selectPlannerPerformanceList" parameterType="HashMap" resultType="HashMap">
        /* CommonPlanner.selectPlannerPerformanceList */
        
        SELECT
            *
        FROM (
            SELECT
                ROWNUM AS RNUM,
                S2.PRD_MST_NO,
                CPM.PRD_MST_NM,
                CPM.PRD_MST_RDP_DVD_PAY,
                CPM.PRD_MST_RDP_DVD_CNT,
                TOTAL_RECEIPT,
                TOTAL_WAITING_TO_JOIN,
                TOTAL_JOIN,
                TOTAL_CANCEL,
                TOTAL_EXPECTED_RETURN
            FROM (
                
                SELECT 
                    W.PRD_MST_NO,
                    SUM(DECODE(STATUS, 'R', CNT, 0)) AS TOTAL_RECEIPT,
                    SUM(DECODE(STATUS, 'W', CNT, 0)) AS TOTAL_WAITING_TO_JOIN,
                    SUM(DECODE(STATUS, 'J', CNT, 0)) AS TOTAL_JOIN,
                    SUM(DECODE(STATUS, 'C', CNT, 0)) AS TOTAL_CANCEL,
                    SUM(EXPECTED_RETURN) AS TOTAL_EXPECTED_RETURN
                FROM (
                
                    SELECT 
                        TOM.PRD_MST_NO, 
                        'R' AS STATUS,
                        COUNT(TOM.PRD_MST_NO) AS CNT,
                        0 AS EXPECTED_RETURN
                    FROM 
                        T_ORD_DLCC TOD,
                        T_ORD_MST TOM
                    WHERE 
                        TOD.RDP_MST_IDX = #{RDP_MST_IDX} 
                        AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX
                            
                        <!-- 기간 -->
                        <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                            AND TOM.ORD_MST_ORD_DT <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00000000'
                        </if>
                        <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                            AND TOM.ORD_MST_ORD_DT <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31235959'
                        </if>
                        <!-- 상품 -->
                        <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                            AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                        </if>
                    
                    GROUP BY 
                        TOM.PRD_MST_NO
                        
                    UNION 
                    
                    SELECT 
                        TOM.PRD_MST_NO,
                        'W' AS STATUS,
                        COUNT(TOM.PRD_MST_NO) AS CNT,
                        0 AS EXPECTED_RETURN
                    FROM 
                        T_ORD_DLCC TOD,
                        T_ORD_MST TOM,
                        V_ORD_MST VOM
                    WHERE 
                        TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                        AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX 
                        AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX 
                        AND VOM.REG_DM IS NOT NULL
                            
                        <!-- 기간 -->
                        <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                            AND VOM.REG_DM <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00000000'
                        </if>
                        <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                            AND VOM.REG_DM <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31235959'
                        </if>
                        <!-- 상품 -->
                        <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                            AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                        </if>
                    
                    GROUP BY 
                        TOM.PRD_MST_NO
                        
                    UNION 
                    
                    SELECT 
                        J.PRD_MST_NO,
                        'J' AS STATUS,
                        COUNT(J.PRD_MST_NO) AS CNT,
                        SUM(J.EXPECTED_RETURN) AS EXPECTED_RETURN
                    FROM (
                        SELECT 
                            TOM.PRD_MST_NO,
                            (
                             SELECT 
                                SUM((VRB.PAY_NO_END - VRB.PAY_NO + 1 ) * VRB.AMT) 
                             FROM 
                                V_B2B_MST VBM,
                                V_RMT_BASIC VRB
                             WHERE 
                                VBM.COM_CD = TOD.SALE_TYPE 
                                AND VRB.SALE_TYPE = VBM.SALE_TYPE 
                                AND VRB.PROD_CD = TOD.PROD_CD 
                                AND VRB.B2B_COMP_CD = TOD.SALE_TYPE
                                AND VOM.JOIN_DT BETWEEN REPLACE(VRB.PROD_JOIN_DT_STR, '-', '') AND REPLACE(VRB.PROD_JOIN_DT_END, '-', '') 
                            ) AS EXPECTED_RETURN
                        FROM 
                            T_ORD_DLCC TOD,
                            T_ORD_MST TOM,
                            V_ORD_MST VOM
                        WHERE 
                            TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                            AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX 
                            AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX 
                            AND VOM.JOIN_DT IS NOT NULL
                            
                            <!-- 기간 -->
                            <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                                AND VOM.JOIN_DT <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00'
                            </if>
                            <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                                AND VOM.JOIN_DT <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31'
                            </if>
                            <!-- 상품 -->
                            <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                                AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                            </if>
                            
                    ) J
                    GROUP BY 
                        J.PRD_MST_NO
                
                    UNION 
                                        
                    SELECT 
                        TOM.PRD_MST_NO,
                        'C' AS STATUS,
                        COUNT(TOM.PRD_MST_NO) AS CNT,
                        0 AS EXPECTED_RETURN
                    FROM 
                        T_ORD_DLCC TOD,
                        T_ORD_MST TOM,
                        V_ORD_MST VOM
                    WHERE 
                        TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                        AND TOD.ORD_MST_IDX = TOM.ORD_MST_IDX 
                        AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX 
                        AND VOM.RESN_PROC_DAY IS NOT NULL
                        AND VOM.RESN_PROC_YN = 'Y'
        
                        <!-- 기간 -->
                        <if test="searchStartYear != null and searchStartYear != '' and searchStartMonth != null and searchStartMonth != ''">
                            AND VOM.RESN_PROC_DAY <![CDATA[>=]]> #{searchStartYear} || LPAD(#{searchStartMonth}, 2, '0') || '00'
                        </if>
                        <if test="searchEndYear != null and searchEndYear != '' and searchEndMonth != null and searchEndMonth != ''">
                            AND VOM.RESN_PROC_DAY <![CDATA[<=]]> #{searchEndYear} || LPAD(#{searchEndMonth}, 2, '0') || '31'
                        </if>
                        <!-- 상품 -->
                        <if test="searchOnlineProductCode != null and searchOnlineProductCode != ''">
                            AND TOM.PRD_MST_NO LIKE '%' || #{searchOnlineProductCode} || '%'
                        </if>
                        
                    GROUP BY 
                        TOM.PRD_MST_NO
                ) W
                GROUP BY 
                    W.PRD_MST_NO
            ) S2, C_PRD_MST CPM
            WHERE 
                S2.PRD_MST_NO = CPM.PRD_MST_NO
        ) S3
        <if test="startNum != null and startNum != '' and endNum != null and endNum != ''">
            WHERE RNUM BETWEEN #{startNum} AND #{endNum}
        </if>
            
    </select>
    
    <!-- 관리자 > 레디플래너 > 공통 > 정산 목록 개수 -->
    <select id="selectPlannerPaymentListCount" parameterType="HashMap" resultType="Integer">
        /* CommonPlanner.selectPlannerPaymentListCount */ 
        SELECT
            COUNT(1)
        FROM (
                SELECT
                    DISTINCT VRO.ALOW_DT
                FROM 
                    T_ORD_DLCC TOD,
                    T_ORD_MST TOM,
                    V_ORD_MST VOM,
                    V_RMT_ORD VRO,
                    T_RMT_ORD TRO
                WHERE
                    TOD.ORD_MST_IDX = TOM.ORD_MST_IDX
                    AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX
                    AND VRO.ORD_MST_IDX = TOM.ORD_MST_IDX 
                    AND TRO.RMT_ORD_IDX = VRO.RMT_ORD_IDX 
                    <include refid="commonPaymentWhere" />
        )
    </select>
    
    <!-- 관리자 > 레디플래너 > 공통 > 정산 목록 -->
    <select id="selectPlannerPaymentList" parameterType="HashMap" resultType="HashMap">
        /* CommonPlanner.selectPlannerPaymentList */
        SELECT
            VRO.ALOW_DT AS ALOW_DT_YM, -- 정산년월
            SUM(VRO.ALOW_AMT) AS TOTAL_ALOW_AMT, -- 정산금액
            MAX(TRO.RMT_ORD_YN) KEEP(DENSE_RANK FIRST ORDER BY TRO.RMT_ORD_YN) RMT_ORD_YN, -- 정산여부
            MAX(TRO.RMT_ORD_UPD_DT) KEEP(DENSE_RANK FIRST ORDER BY TRO.RMT_ORD_UPD_DT) RMT_ORD_UPD_DT -- 지급일
        FROM 
            T_ORD_DLCC TOD,
            T_ORD_MST TOM,
            V_ORD_MST VOM,
            V_RMT_ORD VRO,
            T_RMT_ORD TRO
        WHERE
            TOD.ORD_MST_IDX = TOM.ORD_MST_IDX
            AND TOM.ORD_MST_IDX = VOM.ORD_MST_IDX
            AND VRO.ORD_MST_IDX = TOM.ORD_MST_IDX 
            AND TRO.RMT_ORD_IDX = VRO.RMT_ORD_IDX 
            <include refid="commonPaymentWhere" />
        GROUP BY VRO.ALOW_DT, TRO.RMT_ORD_YN
    </select>
</mapper>