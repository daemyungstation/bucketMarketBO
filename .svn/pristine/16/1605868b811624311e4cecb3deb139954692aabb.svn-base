package web.bo.site.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import common.annotation.AccessLevel;
import common.annotation.RequestParams;
import common.model.Manager.ROLE_MANAGER;
import common.model.Paging;
import common.session.SessionsManager;
import common.util.StringUtil;
import common.viewer.JSON;
import web.bo.common.service.CommonService;
import web.bo.site.service.BasicManagerService;
import web.bo.site.service.VendorManagerService;

/**
 * @PackageName: web.bo.site.controller
 * @FileName : VendorManagerController.java
 * @Date : 2016. 8. 24.
 * @프로그램 설명 : 관리자 > 시스템관리 > 입점업체 관리를 처리하는 Controller Class
 * @author upleat
 */
@Controller
@AccessLevel(ROLE_MANAGER.administrator)
public class VendorManagerController {

    @Resource(name="vendorManagerService")
    private VendorManagerService vendorManagerService;

    @Resource(name="commonService")
    private CommonService commonService;

    @Resource(name="basicManagerService")
    private BasicManagerService basicManagerService;

    @Value("#{resource['server.ssl.domain']}")
    private String serverDomain;
    
    /**
     * 1. MethodName : vendorManagerList 2. ClassName :
     * VendorManagerController.java 3. Comment : 관리자 > 시스템관리 > 입점업체 관리 목록 4. 작성자
     * : upleat 5. 작성일 : 2016. 8. 24.
     * </pre>
     *
     * @param request
     * @param commandMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/bo/site/vendorManagerList")
    public ModelAndView vendorManagerList(HttpServletRequest request, @RequestParams Map<String, Object> commandMap) throws Exception {
        ModelAndView mv = new ModelAndView();

        // 입점업체 관리 목록 개수
        int totalCount = this.vendorManagerService.selectVendorManagerListCount(commandMap);

        Paging paging = new Paging(totalCount, commandMap);
        mv.addObject("paging", paging);

        commandMap.put("startNum", paging.getStartNum());
        commandMap.put("endNum", paging.getEndNum());

        List<Map<String, Object>> list = null;

        if (totalCount > 0) {
            // 입점업체 관리 목록
            list = this.vendorManagerService.selectVendorManagerList(commandMap);
        }
        // 담당자 목록
        mv.addObject("authManagerList", commonService.selectCommonAuthManagerList(commandMap));
        mv.addObject("totalCount", totalCount);
        mv.addObject("commandMap", commandMap);
        mv.addObject("list", list);
        mv.setViewName("bo/site/vendorManagerList");
        return mv;
    }

    /**
     * <pre>
     * 1. MethodName : vendorManagerForm
     * 2. ClassName  : VendorManagerController.java
     * 3. Comment    : 관리자 > 시스템관리 > 입점업체 관리 등록 폼
     * 4. 작성자       : upleat
     * 5. 작성일       : 2016. 8. 24.
     * </pre>
     *
     * @param request
     * @param commandMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/bo/site/vendorManagerForm")
    public ModelAndView vendorManagerForm(HttpServletRequest request, @RequestParams Map<String, Object> commandMap) throws Exception {
        ModelAndView mv = new ModelAndView();

        // Common Codes
        String[] codes = { "HP_CODE", "TEL_CODE", "EMAIL_DOMAIN_CODE" };
        mv.addObject("codes", this.commonService.selectCodes(codes));

        // 담당자 목록
        mv.addObject("authManagerList", commonService.selectCommonAuthManagerList(commandMap));

        mv.addObject("commandMap", commandMap);
        mv.setViewName("bo/site/vendorManagerForm");
        return mv;
    }

    /**
     * <pre>
     * 1. MethodName : vendorManagerRegist
     * 2. ClassName  : VendorManagerController.java
     * 3. Comment    : 관리자 > 시스템관리 > 입점업체 관리 등록
     * 4. 작성자       : upleat
     * 5. 작성일       : 2016. 8. 24.
     * </pre>
     *
     * @param request
     * @param commandMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/bo/site/vendorManagerRegist", method=RequestMethod.POST)
    public ModelAndView vendorManagerRegist(HttpServletRequest request, @RequestParams Map<String, Object> commandMap) throws Exception {
        ModelAndView mv = new ModelAndView();
        // 입점업체 등록
        int result = this.vendorManagerService.insertVendorManager(commandMap);
        // view Page Info
        if (result > 0) {
            mv.addObject("alertMsg", "등록 되었습니다.");
        } else {
            mv.addObject("alertMsg", "등록에 실패하였습니다.");
        }
        mv.addObject("returnUrl", serverDomain + "/bo/site/vendorManagerList.do");
        mv.setViewName("common/result");

        return mv;
    }

    /**
     * <pre>
     * 1. MethodName : vendorManagerEdit
     * 2. ClassName  : VendorManagerController.java
     * 3. Comment    : 관리자 > 시스템관리 > 입점업체 수정 폼
     * 4. 작성자       : upleat
     * 5. 작성일       : 2016. 8. 24.
     * </pre>
     *
     * @param request
     * @param commandMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/bo/site/vendorManagerEdit")
    public ModelAndView vendorManagerEdit(HttpServletRequest request, @RequestParams Map<String, Object> commandMap) throws Exception {
        ModelAndView mv = new ModelAndView();
        if (SessionsManager.isScm(request)) {
            commandMap.put("VDR_MST_IDX", SessionsManager.getSessionValue("ADM_MST_SUB_IDX"));
        }
        if (!"".equals(StringUtil.getString(commandMap.get("VDR_MST_IDX"), ""))) {
            // Common Codes
            String[] codes = { "HP_CODE", "TEL_CODE", "EMAIL_DOMAIN_CODE" };
            mv.addObject("codes", this.commonService.selectCodes(codes));

            // 담당자 목록
            mv.addObject("authManagerList", commonService.selectCommonAuthManagerList(commandMap));

            // 관리자 상세 정보
            mv.addObject("info", this.vendorManagerService.selectVendorManagerInfo(commandMap));
        }

        mv.addObject("commandMap", commandMap);
        mv.setViewName("bo/site/vendorManagerEdit");
        return mv;
    }

    /**
     * <pre>
     * 1. MethodName : vendorManagerModify
     * 2. ClassName  : VendorManagerController.java
     * 3. Comment    : 관리자 > 시스템관리 > 입점업체 수정
     * 4. 작성자       : upleat
     * 5. 작성일       : 2016. 8. 24.
     * </pre>
     *
     * @param request
     * @param commandMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/bo/site/vendorManagerModify", method=RequestMethod.POST)
    public ModelAndView vendorManagerModify(HttpServletRequest request, @RequestParams Map<String, Object> commandMap) throws Exception {
        ModelAndView mv = new ModelAndView();

        int result = this.vendorManagerService.updateVendorManager(request, commandMap);

        // view Page Info
        if (result > 0) {
            mv.addObject("alertMsg", "수정 되었습니다.");
        } else {
            mv.addObject("alertMsg", "수정에 실패하였습니다.");
        }
        mv.addObject("returnUrl", serverDomain + "/bo/site/vendorManagerEdit.do");
        mv.addObject("commandMap", commandMap);
        mv.setViewName("common/result");

        return mv;
    }

    /**
     * <pre>
     * 1. MethodName : vendorManagerNmCheckAjax
     * 2. ClassName  : VendorManagerController.java
     * 3. Comment    : 입점업체 중복 체크
     * 4. 작성자       : upleat
     * 5. 작성일       : 2016. 8. 24.
     * </pre>
     *
     * @param request
     * @param commandMap
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/bo/site/vendorManagerNmCheckAjax", method=RequestMethod.POST)
    public JSON vendorManagerNmCheckAjax(HttpServletRequest request, @RequestParams Map<String, Object> commandMap) throws Exception {
        JSON json = new JSON();
        // 업체명, 사업자 번호 유무확인
        if (!"".equals(StringUtil.getString(commandMap.get("VDR_MST_CPN_NM"), "")) && !"".equals(StringUtil.getString(commandMap.get("VDR_MST_BUSI1"), "")) && !"".equals(StringUtil.getString(commandMap.get("VDR_MST_BUSI2"), ""))
                && !"".equals(StringUtil.getString(commandMap.get("VDR_MST_BUSI3"), ""))) {
            // 입점업체 중복 체크
            int vdrNmCount = this.vendorManagerService.selectVendorManagerNmCheckCount(commandMap);

            if (vdrNmCount > 0) {
                json.put("resultYn", "N");
            } else {
                json.put("resultYn", "Y");
            }
            json.put("successYn", "Y");
        } else {
            json.put("successYn", "N");
        }
        return json;
    }
}
