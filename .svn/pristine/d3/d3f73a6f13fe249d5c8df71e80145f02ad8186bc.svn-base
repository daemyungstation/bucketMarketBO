<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PlannerPayment">
       
    <!-- 관리자 > 레디플래너 > 플래너 지급 조건절 -->
    <sql id="plannerPaymentWhere">
        <bind name="PLANNER_STATE_ACTIVE" value="@common.code.Code@PLANNER_STATE_ACTIVE"/>
        <bind name="PLANNER_STATE_STOP" value="@common.code.Code@PLANNER_STATE_STOP"/>
        <bind name="PLANNER_STATE_REQUEST_RELEASE" value="@common.code.Code@PLANNER_STATE_REQUEST_RELEASE"/>
        AND (
            RDP_MST_STATE = #{PLANNER_STATE_ACTIVE} /* 정상 */ OR RDP_MST_STATE = #{PLANNER_STATE_STOP} /* 이용제한 */ OR RDP_MST_STATE = #{PLANNER_STATE_REQUEST_RELEASE} /* 해제요청 */
        )
        <!-- 정산년월 -->
        <if test="searchPaymentYear != null and searchPaymentYear != '' and searchPaymentMonth != null and searchPaymentMonth != ''">
            AND VRO.ALOW_DT <![CDATA[=]]> #{searchPaymentYear} || LPAD(#{searchPaymentMonth}, 2, '0')
        </if>
    </sql>
    
    <!-- 관리자 > 레디플래너 > 지급 목록 개수 -->
    <select id="selectPlannerPaymentListCount" parameterType="HashMap" resultType="Integer">
        /* PlannerPayment.selectPlannerPaymentListCount */ 
        SELECT
            COUNT(1)
        FROM (
            SELECT
                TRM.RDP_MST_IDX,
                TRO.RMT_ORD_YN
            FROM
                T_RDP_MST TRM,
                T_ORD_DLCC TOD,
                V_RMT_ORD VRO,
                T_RMT_ORD TRO
            WHERE
                TRM.RDP_MST_IDX = TOD.RDP_MST_IDX
                AND TOD.ORD_MST_IDX = VRO.ORD_MST_IDX 
                AND VRO.RMT_ORD_IDX = TRO.RMT_ORD_IDX
                <include refid="plannerPaymentWhere" />
            GROUP BY TRM.RDP_MST_IDX, TRO.RMT_ORD_YN
        ) S1
    </select>
    
    <!-- 관리자 > 레디플래너 > 지급 목록 -->
    <select id="selectPlannerPaymentList" parameterType="HashMap" resultType="HashMap">
        /* PlannerPayment.selectPlannerPaymentList */
        SELECT
        
            S2.RNUM,
            
            TRM.RDP_MST_IDX,
            TRM.RDP_MST_NO,
            TRM.RDP_MST_ID,
            TRM.RDP_MST_MEM_NM,
            TRM.RDP_MST_DM_YN,
            TRM.RDP_MST_DM_NO,
            TRM.RDP_MST_HP1,
            TRM.RDP_MST_HP2,
            TRM.RDP_MST_HP3,
            TRM.RDP_MST_HP1 || '-' || TRM.RDP_MST_HP2 || '-' || TRM.RDP_MST_HP3 AS RDP_MST_HP,
            TRM.RDP_MST_BUSI_CLS,
            TRM.RDP_MST_BNK_CD,
            TRM.RDP_MST_BNK_ACT,
            TRM.RDP_MST_ACT_HDR,
            
            TRM.RDP_MST_BUSI1,
            TRM.RDP_MST_BUSI2,
            TRM.RDP_MST_BUSI3,
            TRM.RDP_MST_SSN1,
            TRM.RDP_MST_SSN2,
            TRM.RDP_MST_BUSI_NM,
            TRM.RDP_MST_ZIP_CODE,
            TRM.RDP_MST_DR_ADDR1,
            TRM.RDP_MST_DR_ADDR2,
            TRM.RDP_MST_MAIL,
            
            (SELECT CMN_COM_NM FROM T_CMM_COM WHERE CMN_COM_IDX = TRM.RDP_MST_BUSI_CLS) AS RDP_MST_BUSI_CLS_NM,
            (SELECT CMN_COM_NM FROM T_CMM_COM WHERE CMN_COM_IDX = TRM.RDP_MST_STATE) AS RDP_MST_STATE_NM,
            (SELECT CMN_COM_NM FROM T_CMM_COM WHERE CMN_COM_IDX = TRM.RDP_MST_BNK_CD) AS RDP_MST_BNK_CD_NM,
            
            S2.TOTAL_ALOW_AMT,
            NVL(S2.RMT_ORD_YN, 'N') AS RMT_ORD_YN,
            S2.RMT_ORD_PAY_DT
            
        FROM (
            SELECT
                ROWNUM AS RNUM,
                S1.*
            FROM (
                SELECT
                    TRM.RDP_MST_IDX,
                    TRO.RMT_ORD_YN,
                    SUM(VRO.ALOW_AMT) AS TOTAL_ALOW_AMT,
                    MAX(TRO.RMT_ORD_PAY_DT) KEEP(DENSE_RANK FIRST ORDER BY TRO.RMT_ORD_PAY_DT) RMT_ORD_PAY_DT
                FROM
                    T_RDP_MST TRM,
                    T_ORD_DLCC TOD,
                    V_RMT_ORD VRO,
                    T_RMT_ORD TRO
                WHERE
                    TRM.RDP_MST_IDX = TOD.RDP_MST_IDX
                    AND TOD.ORD_MST_IDX = VRO.ORD_MST_IDX 
                    AND VRO.RMT_ORD_IDX = TRO.RMT_ORD_IDX
                    <include refid="plannerPaymentWhere"/>
                GROUP BY TRM.RDP_MST_IDX, TRO.RMT_ORD_YN
            ) S1
        ) S2, T_RDP_MST TRM
        WHERE 
            S2.RDP_MST_IDX = TRM.RDP_MST_IDX
            <if test="startNum != null and startNum != '' and endNum != null and endNum != ''">
                AND S2.RNUM BETWEEN #{startNum} AND #{endNum}
            </if>
    </select>
    
    <!-- 지급 알림톡 정보 -->
    <select id="selectPaymentAlimInfo" parameterType="HashMap" resultType="HashMap">
        /* PlannerPayment.selectPaymentAlimInfo */
        
        SELECT
            TRM.RDP_MST_HP1 || '-' || TRM.RDP_MST_HP2 || '-' || TRM.RDP_MST_HP3 AS RDP_MST_HP,
            TRM.RDP_MST_MEM_NM,
            (SELECT CMN_COM_NM FROM T_CMM_COM WHERE CMN_COM_IDX = TRM.RDP_MST_BNK_CD) AS RDP_MST_BNK_CD_NM,
            TRM.RDP_MST_BNK_ACT,
            TRM.RDP_MST_ACT_HDR,
            S.TOTAL_ALOW_AMT
        FROM (
            SELECT 
                TOD.RDP_MST_IDX,
                SUM(VRO.ALOW_AMT) AS TOTAL_ALOW_AMT
            FROM
                V_RMT_ORD VRO, 
                T_RMT_ORD TRO, 
                T_ORD_DLCC TOD
            WHERE 
                VRO.RMT_ORD_IDX = TRO.RMT_ORD_IDX
                AND VRO.ORD_MST_IDX = TOD.ORD_MST_IDX 
                AND TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                AND (
                    TRO.RMT_ORD_YN IS NULL OR TRO.RMT_ORD_YN = 'N'
                )
                AND VRO.ALOW_DT <![CDATA[=]]> #{paymentYear} || LPAD(#{paymentMonth}, 2, '0')
            GROUP BY TOD.RDP_MST_IDX
        ) S, T_RDP_MST TRM
        WHERE
            S.RDP_MST_IDX = TRM.RDP_MST_IDX
    </select>
         
    <!-- 지급 처리 -->
    <insert id="insertPaymentComplete" parameterType="HashMap">
        /* PlannerPayment.insertPaymentComplete */
        
        MERGE INTO T_RMT_ORD O
        USING (
            SELECT 
                TOD.RDP_MST_IDX,
                TRO.RMT_ORD_IDX,
                'Y' AS RMT_ORD_YN,
                TRM.RDP_MST_BNK_CD,
                TRM.RDP_MST_BNK_ACT,
                TRM.RDP_MST_ACT_HDR,
                TO_CHAR(TO_DATE(#{RMT_ORD_PAY_DT}, 'YYYY-MM-DD'), 'YYYYMMDDHH24MISS') AS RMT_ORD_PAY_DT,
                TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') AS RMT_ORD_UPD_DT,
                #{RMT_ORD_UPD_IP} AS RMT_ORD_UPD_IP,
                #{RMT_ORD_UPD_ID} AS RMT_ORD_UPD_ID
            FROM
                V_RMT_ORD VRO, 
                T_RMT_ORD TRO, 
                T_ORD_DLCC TOD,
                T_RDP_MST TRM
            WHERE 
                VRO.ORD_MST_IDX = TOD.ORD_MST_IDX 
                AND VRO.RMT_ORD_IDX = TRO.RMT_ORD_IDX
                AND TRM.RDP_MST_IDX = TOD.RDP_MST_IDX 
                AND TOD.RDP_MST_IDX = #{RDP_MST_IDX}
                AND (
                    TRO.RMT_ORD_YN IS NULL OR TRO.RMT_ORD_YN = 'N'
                )
                AND VRO.ALOW_DT <![CDATA[=]]> #{paymentYear} || LPAD(#{paymentMonth}, 2, '0')
        ) N ON (
            O.RMT_ORD_IDX = N.RMT_ORD_IDX
        )
        
        WHEN MATCHED THEN 
            UPDATE SET
                O.RMT_ORD_YN = N.RMT_ORD_YN,
                O.RDP_MST_BNK_CD = N.RDP_MST_BNK_CD,
                O.RDP_MST_BNK_ACT = N.RDP_MST_BNK_ACT,
                O.RDP_MST_ACT_HDR = N.RDP_MST_ACT_HDR,
                O.RMT_ORD_PAY_DT = N.RMT_ORD_PAY_DT,
                O.RMT_ORD_UPD_DT = N.RMT_ORD_UPD_DT,
                O.RMT_ORD_UPD_IP = N.RMT_ORD_UPD_IP,
                O.RMT_ORD_UPD_ID = N.RMT_ORD_UPD_ID
    </insert>
    
</mapper>